
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get the authenticated user's data document.
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow users to create their own user document on signup.
      allow create: if request.auth.uid == userId;

      // Users can only read and update their own document.
      allow read, update: if request.auth.uid == userId;

      // Rules for the 'conversations' subcollection
      match /conversations/{conversationId} {
        // Users can manage their own conversations.
        allow read, write, delete: if request.auth.uid == userId;
      }
      
      // Rules for the 'cocotalks' subcollection
      match /cocotalks/{cocotalkId} {
        // Users can manage their own cocotalks.
        allow read, write, delete: if request.auth.uid == userId;
      }
    }

    // Rules for the 'settings' collection, specifically for the logo
    match /settings/logo {
      // Any authenticated user can read the logo.
      allow read: if request.auth != null;
      
      // Only users with the 'admin' role can change the logo.
      allow write: if request.auth != null && getUserData().role == 'admin';
    }
  }
}
